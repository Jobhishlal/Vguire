

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Modern Checkout</title>
  <!-- Bootstrap 5 CSS -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <style>
    :root {
      --primary-color: #2874f0;
      --secondary-color: #fb641b;
      --text-color: #212121;
      --light-gray: #f8f9fa;
      --border-radius: 12px;
    }

    body {
      background-color: #f1f3f6;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      color: var(--text-color);
    }

    .checkout-wrapper {
      max-width: 1400px;
      margin: 2rem auto;
      padding: 0 1rem;
    }

    .page-title {
      color: var(--primary-color);
      font-weight: 600;
      margin-bottom: 2rem;
      position: relative;
      padding-bottom: 0.5rem;
    }

    .page-title::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 60px;
      height: 3px;
      background-color: var(--secondary-color);
    }

    .section-card {
      background: white;
      border-radius: var(--border-radius);
      box-shadow: 0 2px 15px rgba(0, 0, 0, 0.05);
      padding: 1.5rem;
      margin-bottom: 1.5rem;
      transition: transform 0.2s;
    }

    .section-card:hover {
      transform: translateY(-2px);
    }

    .order-item {
      background: var(--light-gray);
      border-radius: var(--border-radius);
      padding: 1.5rem;
      margin-bottom: 1rem;
      border: 1px solid rgba(0, 0, 0, 0.05);
    }

    .order-item img {
      border-radius: var(--border-radius);
      object-fit: cover;
      height: 150px;
      width: 100%;
    }

    .product-details h4 {
      color: var(--primary-color);
      font-size: 1.2rem;
      margin-bottom: 1rem;
    }

    .quantity-control {
      display: flex;
      align-items: center;
      gap: 1rem;
      margin: 1rem 0;
    }

    .quantity-input {
      max-width: 100px;
    }

    .address-card {
      border: 2px solid #e0e0e0;
      border-radius: var(--border-radius);
      padding: 1rem;
      margin-bottom: 1rem;
      cursor: pointer;
      transition: border-color 0.2s;
    }

    .address-card:hover {
      border-color: var(--primary-color);
    }

    .address-card.selected {
      border-color: var(--primary-color);
      background-color: #f8f9fa;
    }

    .btn-custom-primary {
      background-color: var(--primary-color);
      color: white;
      border: none;
      padding: 0.8rem 1.5rem;
      border-radius: var(--border-radius);
      transition: all 0.3s;
    }

    .btn-custom-primary:hover {
      background-color: #1a5cbd;
      transform: translateY(-1px);
    }

    .btn-custom-secondary {
      background-color: var(--secondary-color);
      color: white;
    }

    .btn-custom-secondary:hover {
      background-color: #e85a19;
    }

    .modal-content {
      border-radius: var(--border-radius);
    }

    .modal-header {
      background-color: var(--primary-color);
      color: white;
      border-top-left-radius: var(--border-radius);
      border-top-right-radius: var(--border-radius);
    }

    .form-control, .form-select {
      border-radius: 8px;
      padding: 0.8rem;
      border: 1px solid #ddd;
    }

    .form-control:focus, .form-select:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 0.2rem rgba(40, 116, 240, 0.25);
    }

    .summary-card {
      position: sticky;
      top: 20px;
    }

    .price-detail {
      display: flex;
      justify-content: space-between;
      margin-bottom: 0.5rem;
    }

    .total-price {
      font-size: 1.25rem;
      font-weight: 600;
      color: var(--primary-color);
      border-top: 1px solid #ddd;
      padding-top: 1rem;
      margin-top: 1rem;
    }

    @media (max-width: 768px) {
      .order-item {
        flex-direction: column;
      }
      
      .product-details {
        margin-top: 1rem;
      }

      .summary-card {
        position: static;
        margin-top: 1rem;
      }
    }
    .checkout-form {
            max-width: 500px;
            margin: auto;
            padding: 20px;
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }
        .form-label {
            font-weight: 600;
        }
        .form-select {
            height: 45px;
        }
        .btn-primary {
            background: #007bff;
            border: none;
            font-size: 18px;
            padding: 10px;
            border-radius: 5px;
            width: 100%;
            transition: 0.3s;
        }
        .btn-primary:hover {
            background: #0056b3;
        }
    
  </style>
</head>
<body>
  <div class="checkout-wrapper">
    <h2 class="page-title">Checkout</h2>
    
    <div class="row">
      <div class="col-lg-8">
        <!-- Items Section -->
        <div class="section-card">
          <h3 class="mb-4"><i class="fas fa-shopping-cart me-2"></i>Your Items</h3>
          <% items.forEach(item => { %>
            <div class="order-item">
              <div class="row align-items-center">
                <div class="col-md-3">
                <img src="<%= item.product.images[0] %>" alt="<%= item.product.name %>" class="img-fluid">
                </div>
                <div class="col-md-9 product-details">
                  <h4><%= item.product.name %></h4>
                  <p class="text-muted">Size: <%= item.size %></p>
              
                  <% if(checkoutType == 'single'){ %>
                      <div class="quantity-control d-flex align-items-center">
                          <button type="button" class="btn btn-sm btn-outline-secondary"
                              onclick="changeSingleProductQuantity(this, -1, 5, '<%= item.product._id %>', '<%= item.size %>', <%= item.price %>)">−</button>
              
                          <input type="number" class="form-control quantity-input text-center mx-2"
                              name="quantity" value="<%= item.quantity %>" min="1" max="5" readonly>
              
                          <button type="button" class="btn btn-sm btn-outline-secondary"
                              onclick="changeSingleProductQuantity(this, 1, 5, '<%= item.product._id %>', '<%= item.size %>', <%= item.price %>)">+</button>
                      </div>
                  <% } else { %>
                      <p>Quantity: <strong><%= item.quantity %></strong></p>
                  <% } %>
              
                  <div class="mt-3">
                      <p class="mb-1">Unit Price: <strong>₹<%= item.price.toLocaleString() %></strong></p>
                      <p class="mb-0">Total: <strong class="text-primary">₹<%= (item.price * item.quantity).toLocaleString() %></strong></p>
                  </div>
              </div>
              
              </div>
            </div>
          <% }); %>
        </div>

        <!-- Address Section -->
        <div class="section-card">
          <h3 class="mb-4"><i class="fas fa-map-marker-alt me-2"></i>Shipping Address</h3>
          <% if (addresses && addresses.length > 0) { %>
            <div class="mb-3">
              <select id="addressSelect" class="form-select">
                <% addresses.forEach(addr => { %>
                  <option value="<%= addr._id %>"
                          data-fullname="<%= addr.fullName %>"
                          data-phone="<%= addr.phone %>"
                          data-street="<%= addr.streetAddress %>"
                          data-city="<%= addr.city %>"
                          data-state="<%= addr.state %>"
                          data-pincode="<%= addr.pincode %>"
                          data-addresstype="<%= addr.addressType %>">
                    <%= addr.fullName %> - <%= addr.streetAddress %>, <%= addr.city %>
                  </option>
                <% }); %>
              </select>
            </div>
            <button type="button" class="btn btn-outline-primary me-2" id="editAddressBtn" data-bs-toggle="modal" data-bs-target="#editAddressModal">
              <i class="fas fa-edit me-2"></i>Edit Address
            </button>
          <% } else { %>
            <p class="text-muted">No saved addresses found.</p>
          <% } %>
          <button type="button" class="btn btn-custom-primary" id="addNewAddressBtn" data-bs-toggle="modal" data-bs-target="#addAddressModal">
            <i class="fas fa-plus me-2"></i>Add New Address
          </button>
        </div>
      </div>

      <!-- Order Summary Section -->
      <div class="col-lg-4">
        <div class="section-card summary-card">
          <h3 class="mb-4"><i class="fas fa-clipboard-list me-2"></i>Order Summary</h3>
          <div class="price-detail">
            <span>Items Total</span>
            <span>₹<%= totalAmount.toLocaleString() %></span>
          </div>
          <div class="price-detail">
            <span>Delivery Charges</span>
            <span class="text-success">FREE</span>
          </div>
          <div class="price-detail total-price">
            <span>Total Amount</span>
            <span>₹<%= totalAmount.toLocaleString() %></span>
          </div>
          <form id="checkoutForm" action="/user/checkout/placeorder" method="POST" class="mt-4">
    
            <% if (typeof selectedAddressId !== 'undefined' && selectedAddressId) { %>
                <input type="hidden" name="addressId" value="<%= selectedAddressId %>">
            <% } else { %>
                <div class="alert alert-danger" role="alert">
                    Please select an address before placing your order.
                </div>
            <% } %>
        
            <% items.forEach((item, index) => { %>
                <input type="hidden" name="items[<%= index %>][productId]" value="<%= item.product._id %>">
                <input type="hidden" name="items[<%= index %>][size]" value="<%= item.size %>">
                <input type="hidden" name="items[<%= index %>][quantity]" value="<%= item.quantity %>">
            <% }); %>
        
            <div class="mb-4">
                <label class="form-label"><i class="fas fa-credit-card me-2"></i>Payment Method</label>
                <select name="paymentMethod" class="form-select" required>
                    <option value="COD">Cash on Delivery</option>
                    <option value="Online">Online Payment</option>
                </select>
            </div>
        
            <% if (typeof selectedAddressId !== 'undefined' && selectedAddressId) { %>
                <button type="submit" class="btn btn-custom-secondary w-100">
                    <i class="fas fa-shopping-bag me-2"></i> Place Order
                </button>
            <% } else { %>
                <button type="button" class="btn btn-secondary w-100" disabled>
                    <i class="fas fa-shopping-bag me-2"></i> Select an Address to Order
                </button>
            <% } %>
        
        </form>
        
        </div>
      </div>
    </div>
  </div>

  <!-- Edit Address Modal -->
  <div class="modal fade" id="editAddressModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title"><i class="fas fa-edit me-2"></i>Edit Address</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="editAddressForm" action="/user/address/edit" method="POST">
            <input type="hidden" name="redirectUrl" value="<%= currentCheckoutUrl %>">
            <input type="hidden" name="addressId" id="editAddressId">
            <div class="mb-3">
              <input type="text" name="fullName" id="editFullName" class="form-control" required placeholder="Full Name">
            </div>
            <div class="mb-3">
              <input type="text" name="phone" id="editPhone" class="form-control" required placeholder="Phone">
            </div>
            <div class="mb-3">
              <input type="text" name="streetAddress" id="editStreetAddress" class="form-control" required placeholder="Street Address">
            </div>
            <div class="mb-3">
              <input type="text" name="city" id="editCity" class="form-control" required placeholder="City">
            </div>
            <div class="mb-3">
              <input type="text" name="state" id="editState" class="form-control" required placeholder="State">
            </div>
            <div class="mb-3">
              <input type="text" name="pincode" id="editPincode" class="form-control" required placeholder="Pincode">
            </div>
            <div class="mb-3">
              <select name="addressType" id="editAddressType" class="form-select" required>
                <option value="Home">Home</option>
                <option value="Work">Work</option>
                <option value="Other">Other</option>
              </select>
            </div>
            <button type="submit" class="btn btn-custom-primary w-100">Update Address</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Address Modal -->
  <div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Add New Address</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <form id="addAddressForm" action="/user/address/add" method="POST">
                <input type="hidden" name="redirectUrl" value="<%= currentCheckoutUrl %>">
                <input type="text" name="fullName" class="form-control" required placeholder="Full Name">
                <input type="text" name="phone" class="form-control" required placeholder="Phone">
                <input type="text" name="streetAddress" class="form-control" required placeholder="Street Address">
                <input type="text" name="city" class="form-control" required placeholder="City">
                <input type="text" name="state" class="form-control" required placeholder="State">
                <input type="text" name="pincode" class="form-control" required placeholder="Pincode">
                <select name="addressType" class="form-control" required>
                    <option value="Home">Home</option>
                    <option value="Work">Work</option>
                    <option value="Other">Other</option>
                </select>
                <button type="submit" class="btn btn-success mt-2">Save Address</button>
            </form>
            
        </div>
      </div>
    </div>
  </div>

  
 





  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
 
  <script>


document.getElementById("checkoutForm").addEventListener("submit", function(event) {
    event.preventDefault(); 

    Swal.fire({
      title: "Order Placed!",
      text: "Your order has been placed successfully.",
      icon: "success",
      confirmButtonText: "OK",
      allowOutsideClick: false
    }).then((result) => {
      if (result.isConfirmed) {
        event.target.submit(); 
      }
    });
  });


  document.getElementById("addressSelect").addEventListener("change", function () {
    const selectedOption = this.options[this.selectedIndex];
    document.querySelector("input[name='addressId']").value = selectedOption.value; 
    console.log(" Updated Address ID:", selectedOption.value);
});



document.querySelectorAll(".quantity-control").forEach(container => {
    const quantityInput = container.querySelector(".quantity-input");
    const decreaseBtn = container.querySelector(".decrease-btn");
    const increaseBtn = container.querySelector(".increase-btn");

    const productId = container.closest(".product-details").querySelector("input[name='productId']").value;
    const size = container.closest(".product-details").querySelector("input[name='size']").value;
    const totalElement = container.closest(".product-details").querySelector(".text-primary");
    const unitPrice = parseFloat(container.closest(".product-details").querySelector("strong").textContent.replace("₹", "").replace(",", ""));

    function updateQuantity(change) {
        let quantity = parseInt(quantityInput.value) || 1;
        let newQuantity = quantity + change;

        if (newQuantity < 1) {
            newQuantity = 1;
        } else if (newQuantity > 5) {
            newQuantity = 5;
            Swal.fire({
                title: "Limit Reached!",
                text: "You can only buy up to 5 items.",
                icon: "warning",
                confirmButtonColor: "#d33",
                confirmButtonText: "OK"
            });
        }

        quantityInput.value = newQuantity;
        totalElement.textContent = `₹${(newQuantity * unitPrice).toLocaleString()}`;

        // 🔥 Send AJAX request to update the quantity
        fetch("/user/checkout/update-quantity", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ productId, size, quantity: newQuantity })
        }).then(response => response.json())
        .then(data => {
            if (!data.success) {
                Swal.fire({
                    icon: "error",
                    title: "Update Failed",
                    text: data.message || "Something went wrong."
                });
            }
        }).catch(error => console.error("Error updating quantity:", error));
    }

    decreaseBtn.addEventListener("click", () => updateQuantity(-1));
    increaseBtn.addEventListener("click", () => updateQuantity(1));
});


console.log(" Address ID Sent to Backend:", document.querySelector('input[name="addressId"]').value);


document.getElementById("editAddressBtn").addEventListener("click", () => {
    const selectedOption = document.getElementById("addressSelect").selectedOptions[0];

    if (!selectedOption) {
        alert("Please select an address to edit.");
        return;
    }

    
    document.getElementById("editAddressId").value = selectedOption.value;
    document.getElementById("editFullName").value = selectedOption.getAttribute("data-fullname");
    document.getElementById("editPhone").value = selectedOption.getAttribute("data-phone");
    document.getElementById("editStreetAddress").value = selectedOption.getAttribute("data-street");
    document.getElementById("editCity").value = selectedOption.getAttribute("data-city");
    document.getElementById("editState").value = selectedOption.getAttribute("data-state");
    document.getElementById("editPincode").value = selectedOption.getAttribute("data-pincode");
    document.getElementById("editAddressType").value = selectedOption.getAttribute("data-addresstype");
});

document.getElementById("editAddressForm").addEventListener("submit", function (e) {
    e.preventDefault(); 

    const addressId = document.getElementById("editAddressId").value;
    if (!addressId) {
        alert("Address ID is missing.");
        return;
    }

    this.action = "/user/address/edit/" + addressId; 
    this.submit(); 
});

function updateHiddenQuantity(input) {
      input.setAttribute("value", input.value);
  }

  </script>

</body>
</html>
