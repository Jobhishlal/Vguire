<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --sidebar-width: 250px;
            --sidebar-collapsed-width: 70px;
            --header-height: 60px;
            --primary-color: #cbcfda;
            --secondary-color: #858796;
            --dark-bg: #1a1a1a;
            --card-bg: #242424;
            --text-color: #e4e4e4;
            --main-bg: #1f1f1f;
        }
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: var(--sidebar-width);
            background: linear-gradient(180deg, #010612 0%, #224abe 100%);
            transition: all 0.3s ease;
            z-index: 1000;
            padding-top: var(--header-height);
        }
        .sidebar.collapsed {
            width: var(--sidebar-collapsed-width);
        }
        .sidebar-header {
            position: fixed;
            top: 0;
            left: 0;
            width: var(--sidebar-width);
            height: var(--header-height);
            background: rgba(1, 6, 18, 0.9);
            display: flex;
            align-items: center;
            padding: 0 1rem;
            transition: all 0.3s ease;
            z-index: 1001;
        }
        .sidebar.collapsed .sidebar-header {
            width: var(--sidebar-collapsed-width);
        }
        .logo-full {
            display: flex;
            align-items: center;
            color: white;
            text-decoration: none;
            font-size: 1.5rem;
            font-weight: bold;
        }
        .logo-mini {
            display: none;
            color: white;
            text-decoration: none;
            font-size: 1.5rem;
            font-weight: bold;
        }
        .sidebar.collapsed .logo-full {
            display: none;
        }
        .sidebar.collapsed .logo-mini {
            display: block;
        }
        .nav-item {
            position: relative;
            margin: 0.25rem 1rem;
        }
        .nav-link {
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            border-radius: 0.5rem;
            transition: all 0.3s ease;
        }
        .nav-link:hover {
            color: white;
            background: rgba(255, 255, 255, 0.1);
        }
        .nav-link i {
            width: 20px;
            text-align: center;
            margin-right: 1rem;
        }
        .sidebar.collapsed .nav-link span {
            display: none;
        }
        .sidebar.collapsed .nav-item {
            margin: 0.25rem 0.5rem;
        }
        .sidebar.collapsed .nav-link i {
            margin-right: 0;
        }
        /* Main Content Styles */
        main {
            margin-left: var(--sidebar-width);
            padding: 2rem;
            background-color: var(--main-bg);
            color: var(--text-color);
            transition: margin-left 0.3s ease;
        }
        .sidebar.collapsed + main {
            margin-left: var(--sidebar-collapsed-width);
        }
        .container {
            max-width: 800px;
            margin: auto;
            background-color: var(--card-bg);
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        h2 {
            color: #3bf113;
            margin-bottom: 2rem;
        }
        .form-label {
            color: var(--text-color);
        }
        .form-control {
            background-color: var(--dark-bg);
            border-color: var(--secondary-color);
            color: var(--text-color);
        }
        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            color: var(--dark-bg);
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            width: 100%;
        }
        .btn-primary:hover {
            background-color: var(--secondary-color);
            border-color: var(--secondary-color);
        }
        .btn-secondary {
            background-color: var(--secondary-color);
            border-color: var(--secondary-color);
            color: var(--text-color);
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            width: 100%;
        }
        .btn-secondary:hover {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }
        .btn-danger {
            background-color: #dc3545;
            border-color: #dc3545;
            color: var(--text-color);
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
        }
        .btn-danger:hover {
            background-color: #c82333;
            border-color: #bd2130;
        }
        .image-preview-container {
            margin-bottom: 1rem;
        }
        .image-preview-container img {
            border-radius: 8px;
        }
        #cropperSection {
            margin-top: 2rem;
        }
        #cropperSection img {
            max-width: 100%;
            border-radius: 8px;
        }
    </style>
</head>

<body style="background-color: #1f1f1f;">
    <div class="dashboard-container">
        <!-- Sidebar -->
        <nav class="sidebar">
            <div class="sidebar-header">
                <a href="#" class="logo-full">
                    <i class="fas fa-shopping-bag me-2"></i>
                    VGURIE
                </a>
                <a href="#" class="logo-mini">
                    <i class="fas fa-shopping-bag"></i>
                </a>
            </div>
            <div class="nav flex-column">
                <div class="nav-item">
                    <a href="/admin/dashboard" class="nav-link">
                        <i class="fas fa-th-large"></i>
                        <span>Dashboard</span>
                    </a>
                </div>
                <div class="nav-item">
                    <a href="/admin/product" class="nav-link">
                        <i class="fas fa-box"></i>
                        <span>Products</span>
                    </a>
                </div>
                <div class="nav-item">
                    <a href="/admin/ordermanagement" class="nav-link">
                        <i class="fas fa-shopping-cart"></i>
                        <span>Orders</span>
                    </a>
                </div>
                <div class="nav-item">
                    <a href="/admin/usersmanagement" class="nav-link">
                        <i class="fas fa-users"></i>
                        <span>Users</span>
                    </a>
                </div>
                <div class="nav-item">
                    <a href="/admin/categories" class="nav-link">
                        <i class="fas fa-tags"></i>
                        <span>Categories</span>
                    </a>
                </div>
                <div class="nav-item">
                    <a href="/admin/returnRequests" class="nav-link">
                        <i class="fas fa-undo-alt"></i>
                        <span>Returns & Refunds</span>
                    </a>
                </div>
                <div class="nav-item">
                    <a href="#" class="nav-link">
                        <i class="fas fa-ticket-alt"></i>
                        <span>Coupons</span>
                    </a>
                </div>
                <div class="nav-item">
                    <a href="#" class="nav-link">
                        <i class="fas fa-image"></i>
                        <span>Banners</span>
                    </a>
                </div>
                <div class="nav-item">
                    <a href="#" class="nav-link">
                        <i class="fas fa-cog"></i>
                        <span>Settings</span>
                    </a>
                </div>
                <div class="nav-item mt-auto">
                    <a href="#" class="nav-link text-danger">
                        <i class="fas fa-sign-out-alt"></i>
                        <span>Logout</span>
                    </a>
                </div>
            </div>
        </nav>
    </div>

    <main>
        <div class="container my-5">
            <div class="text-center mb-4">
                <i class="fas fa-cogs fa-3x text-primary mb-3"></i>
                <h2>Edit Product</h2>
            </div>

            <!-- Form for editing product -->
            <form id="productForm" action="/admin/edit-product/<%= product._id %>" method="POST" enctype="multipart/form-data">

                <!-- Product Name -->
                <div class="mb-3">
                    <label for="productName" class="form-label">Product Name</label>
                    <input type="text" class="form-control" id="productName" name="name" value="<%= product.name %>" placeholder="Enter product name">
                </div>

                <!-- Product Description -->
                <div class="mb-3">
                    <label for="productDescription" class="form-label">Product Description</label>
                    <textarea class="form-control" id="productDescription" name="description" placeholder="Describe the product" rows="4"><%= product.description %></textarea>
                </div>

                <!-- Product Price -->
                <div class="mb-3">
                    <label for="productPrice" class="form-label">Product Price</label>
                    <input type="number" class="form-control" id="productPrice" name="price" value="<%= product.price %>" placeholder="Enter price">
                </div>

                <!-- Category Selection -->
                <div class="mb-3">
                    <label for="productCategory" class="form-label">Category</label>
                    <select class="form-control" id="productCategory" name="category">
                        <option value="">Select Category</option>
                        <% categories.forEach(category => { %>
                            <option value="<%= category._id %>"
                                <%= String(product.category) === String(category._id) ? 'selected' : '' %>>
                                <%= category.name %>
                            </option>
                        <% }); %>
                    </select>
                </div>

                <!-- Image Upload Section (Existing Images) -->
                <div id="imageUploadSection">
                    <% product.images.forEach((image, index) => { %>
                      <div id="imagePreview_<%= index %>" class="image-preview-container">
                        <img src="<%= image %>" alt="Product Image" class="img-fluid" style="max-height: 200px;">
                        <button type="button" class="btn btn-danger mt-2" onclick="removeImage(<%= index %>, '<%= image %>')">Remove</button>
                      </div>
                    <% }) %>
                </div>
                <button type="button" id="addImageBtn" class="btn btn-secondary" onclick="addImageInput()">Add Another Image</button>

                <!-- Image Cropper Section -->
                <div id="cropperSection" style="display: none;">
                    <h5>Crop the Image</h5>
                    <div>
                        <img id="imagePreview" src="" alt="Image Preview" />
                    </div>
                    <button type="button" class="btn btn-primary mt-2" onclick="cropImage()">Crop Image</button>
                </div>

                <!-- Size Variations -->
                <h5 class="mt-4">Size Variations</h5>

                <div class="mb-3">
                    <label for="sizeS" class="form-label">Size S</label>
                    <input type="number" class="form-control" id="sizeS" name="sizeS" value="<%= product.sizeS %>" placeholder="Enter stock for Size S" oninput="updateTotalStock()" required>
                </div>

                <div class="mb-3">
                    <label for="sizeM" class="form-label">Size M</label>
                    <input type="number" class="form-control" id="sizeM" name="sizeM" value="<%= product.sizeM %>" placeholder="Enter stock for Size M" oninput="updateTotalStock()" required>
                </div>

                <div class="mb-3">
                    <label for="sizeL" class="form-label">Size L</label>
                    <input type="number" class="form-control" id="sizeL" name="sizeL" value="<%= product.sizeL %>" placeholder="Enter stock for Size L" oninput="updateTotalStock()" required>
                </div>

                <div class="mb-3">
                    <label for="sizeXL" class="form-label">Size XL</label>
                    <input type="number" class="form-control" id="sizeXL" name="sizeXL" value="<%= product.sizeXL %>" placeholder="Enter stock for Size XL" oninput="updateTotalStock()" required>
                </div>

                <div class="mb-3">
                    <label for="sizeXXL" class="form-label">Size XXL</label>
                    <input type="number" class="form-control" id="sizeXXL" name="sizeXXL" value="<%= product.sizeXXL %>" placeholder="Enter stock for Size XXL" oninput="updateTotalStock()" required>
                </div>

                <!-- Total Stock -->
                <div class="mb-3">
                    <label for="totalStock" class="form-label">Total Stock</label>
                    <input type="number" class="form-control" id="totalStock" name="totalStock" value="<%= product.totalStock %>" placeholder="Total Stock" readonly>
                </div>

                <!-- Submit Button -->
                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>

            </form>

            <input type="hidden" id="base64Image" name="imageBase64">

            <!-- Loading Indicator -->
            <div id="loadingIndicator" style="display: none;">Cropping image...</div>

            <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

            <% if (messages && messages.success && messages.success.length > 0) { %>
                <script>
                    Swal.fire({
                        icon: "success",
                        title: "Success",
                        text: "<%= messages.success[0] %>",
                        confirmButtonColor: "#28a745"
                    });
                </script>
            <% } %>

            <% if (messages && messages.error && messages.error.length > 0) { %>
                <script>
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "<%= messages.error[0] %>",
                        confirmButtonColor: "#d33"
                    });
                </script>
            <% } %>

            <script>
                let cropper;

                function addImageInput() {
                    const container = document.getElementById('imageUploadSection');
                    const newInputDiv = document.createElement('div');
                    newInputDiv.classList.add('image-preview');

                    const newInput = document.createElement('input');
                    newInput.type = 'file';
                    newInput.className = 'form-control';
                    newInput.name = 'images';
                    newInput.accept = 'image/*';
                    newInput.addEventListener('change', function() {
                        previewAndCropImage(this);
                    });

                    const removeBtn = document.createElement('button');
                    removeBtn.type = 'button';
                    removeBtn.classList.add('btn', 'btn-danger', 'mt-2');
                    removeBtn.innerText = 'Remove';
                    removeBtn.onclick = function() {
                        removeImage(removeBtn);
                    };

                    newInputDiv.appendChild(newInput);
                    newInputDiv.appendChild(removeBtn);
                    container.appendChild(newInputDiv);
                }

                async function removeImage(index, imageUrl) {
                    const confirmation = confirm("Are you sure you want to delete this image?");
                    if (!confirmation) return;

                    try {
                        const response = await fetch('/admin/delete-image', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                imageUrl: imageUrl,
                            }),
                        });

                        if (response.ok) {
                            const container = document.getElementById('imageUploadSection');
                            const imageDiv = document.getElementById('imagePreview_' + index);
                            container.removeChild(imageDiv);
                        } else {
                            alert('Failed to delete image from server.');
                        }
                    } catch (error) {
                        console.error('Error deleting image:', error);
                        alert('An error occurred while deleting the image.');
                    }
                }

                function previewAndCropImage(inputElement) {
                    if (inputElement.files.length === 0) {
                        alert('Please select an image.');
                        return;
                    }

                    const file = inputElement.files[0];
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const image = document.getElementById('imagePreview');
                        image.src = e.target.result;
                        document.getElementById('cropperSection').style.display = 'block';

                        if (cropper) {
                            cropper.destroy(); // Reset the cropper instance if a new image is selected
                        }

                        cropper = new Cropper(image, {
                            aspectRatio: 0,
                            viewMode: 1,
                            autoCropArea: 1,
                            responsive: true,
                            background: false,
                            movable: true,
                            zoomable: true,
                            scalable: true,
                            minCropBoxWidth: 50,
                            minCropBoxHeight: 50
                        });
                    };
                    reader.onerror = function () {
                        alert('Error loading the image. Please try again.');
                    };
                    reader.readAsDataURL(file);
                }

                function cropImage() {
                    if (cropper) {
                        const croppedCanvas = cropper.getCroppedCanvas();
                        if (croppedCanvas) {
                            const croppedImage = croppedCanvas.toDataURL('image/jpeg');
                            document.getElementById('base64Image').value = croppedImage;
                            document.getElementById('cropperSection').style.display = 'none';
                        }
                    } else {
                        // If no crop is done, proceed without cropping
                        document.getElementById('cropperSection').style.display = 'none';
                    }
                }

                async function validateForm(event) {
                    event.preventDefault();
                    const form = document.getElementById("productForm");
                    const formData = new FormData(form);

                    try {
                        const response = await fetch(form.action, {
                            method: "POST",
                            body: formData
                        });

                        const result = await response.json(); // Expect JSON response from backend

                        if (response.ok) {
                            Swal.fire({
                                icon: "success",
                                title: "Success",
                                text: result.message || "Product updated successfully!",
                                confirmButtonColor: "#28a745"
                            }).then(() => {
                                window.location.href = "/admin/product";
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: result.message || "Failed to update product.",
                                confirmButtonColor: "#d33"
                            });
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: "Something went wrong!",
                            confirmButtonColor: "#d33"
                        });
                    }
                }

                document.getElementById("productForm").addEventListener("submit", validateForm);

                function updateTotalStock() {
                    const sizeS = parseInt(document.getElementById('sizeS').value) || 0;
                    const sizeM = parseInt(document.getElementById('sizeM').value) || 0;
                    const sizeL = parseInt(document.getElementById('sizeL').value) || 0;
                    const sizeXL = parseInt(document.getElementById('sizeXL').value) || 0;
                    const sizeXXL = parseInt(document.getElementById('sizeXXL').value) || 0;

                    const totalStock = sizeS + sizeM + sizeL + sizeXL + sizeXXL;
                    document.getElementById('totalStock').value = totalStock;
                }
            </script>

            <script src="https://kit.fontawesome.com/a076d05399.js"></script>
        </div>
    </main>
</body>

</html>
